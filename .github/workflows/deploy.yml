name: Deploy Solar Markdown Website Builder

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: app/package.json
    
    - name: Install pnpm
      run: npm install -g pnpm
    
    - name: Install frontend dependencies
      run: |
        cd app
        pnpm install
    
    - name: Run frontend tests
      run: |
        cd app
        pnpm test --run
    
    - name: Build frontend
      run: |
        cd app
        pnpm build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: app/dist/

  test-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Install backend dependencies
      run: |
        cd services
        uv sync
    
    - name: Run backend tests
      run: |
        cd services
        uv run pytest --cov=api --cov-report=xml
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: services/coverage.xml

  build-docker:
    needs: [test-frontend, test-backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push E2B image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./e2b.Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/e2b:latest
          ghcr.io/${{ github.repository }}/e2b:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and push Railway image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./railway.Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/railway:latest
          ghcr.io/${{ github.repository }}/railway:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-e2b:
    needs: build-docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
    - name: Deploy to E2B
      run: |
        echo "Deploying to E2B platform..."
        # Add E2B deployment commands here
        echo "Deployment URL: https://markdown-builder.e2b.dev"

  deploy-railway:
    needs: build-docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
    - name: Deploy to Railway
      run: |
        echo "Deploying to Railway platform..."
        # Add Railway deployment commands here
        echo "Deployment URL: https://solar-markdown-builder.railway.app"

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

  notify:
    needs: [deploy-e2b, deploy-railway]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Deployment notification
      run: |
        echo "ðŸš€ Solar Markdown Website Builder deployment completed!"
        echo "ðŸ“Š Status: ${{ job.status }}"
        echo "ðŸ”— Frontend: E2B Platform"
        echo "ðŸ”— Backend: Railway Platform"